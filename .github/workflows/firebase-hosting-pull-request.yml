# .github/workflows/firebase-hosting-pull-request.yml
# Workflow para preview de pull requests
name: Deploy to Firebase Hosting (preview)
on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - run: npm ci

      # üîé Paso de validaci√≥n para evitar builds "vac√≠os"
      # Nota: Comentado porque los secrets pueden no estar disponibles en PRs
      # - name: Validate VITE envs
      #   run: |
      #     test -n "$VITE_FIREBASE_API_KEY" || (echo "Missing VITE_FIREBASE_API_KEY" && exit 1)
      #     test -n "$VITE_FIREBASE_AUTH_DOMAIN" || (echo "Missing VITE_FIREBASE_AUTH_DOMAIN" && exit 1)
      #     test -n "$VITE_FIREBASE_PROJECT_ID" || (echo "Missing VITE_FIREBASE_PROJECT_ID" && exit 1)
      #     test -n "$VITE_FIREBASE_APP_ID" || (echo "Missing VITE_FIREBASE_APP_ID" && exit 1)
      #     test -n "$VITE_FIREBASE_MESSAGING_SENDER_ID" || (echo "Missing VITE_FIREBASE_MESSAGING_SENDER_ID" && exit 1)
      #     test -n "$VITE_FIREBASE_STORAGE_BUCKET" || (echo "Missing VITE_FIREBASE_STORAGE_BUCKET" && exit 1)
      #   env:
      #     VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      #     VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
      #     VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      #     VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      #     VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
      #     VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}

      - name: Debug environment
        run: |
          echo "Checking environment variables..."
          echo "VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}"
          if [ -z "${{ secrets.VITE_FIREBASE_PROJECT_ID }}" ]; then
            echo "WARNING: VITE_FIREBASE_PROJECT_ID is empty!"
          fi

      - name: Build
        run: npm run build || (echo "Build failed!" && npm run build 2>&1 | tail -50)
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}

      # Verificar que se cre√≥ la carpeta dist
      - name: Check dist folder
        run: |
          if [ ! -d "dist" ]; then
            echo "ERROR: dist folder does not exist!"
            echo "Contents of current directory:"
            ls -la
            exit 1
          fi
          echo "dist folder exists. Contents:"
          ls -la dist

      # Verificar que la key qued√≥ horneada en el bundle
      # Nota: Comentado porque puede fallar si no hay secrets disponibles
      # - name: Sanity check bundle
      #   run: "grep -Rho 'AIza[0-9A-Za-z_\\-]\\+' dist || (echo 'No API key found in dist' && exit 1)"

      - name: Deploy to preview channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_M7ABPRO }}
          projectId: m7abpro
          channelId: preview