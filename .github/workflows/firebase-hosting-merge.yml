# .github/workflows/firebase-hosting-merge.yml
name: Deploy to Firebase Hosting (prod)
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - run: npm cache clean --force
      - run: npm ci

      - name: Clean dist directory
        run: rm -rf dist

      - name: Build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
        run: npm run build

      - name: Install Firebase Tools
        run: npm install -g firebase-tools

      - name: Clear Firebase cache
        run: rm -rf .firebase

      - name: Deploy Firestore rules
        run: firebase deploy --only firestore:rules,firestore:indexes --project m7abpro --token "${{ secrets.FIREBASE_TOKEN }}" --debug --force
      
      - name: Deploy to production
        run: firebase deploy --only hosting --project m7abpro --token "${{ secrets.FIREBASE_TOKEN }}" --debug --force
      
      - name: Verify deployment
        run: |
          echo "‚úÖ Deployment completed"
          echo "üì¶ Hosting deployed"
          echo "üîê Firestore rules deployed"
          echo "üìä Firestore indexes deployed"